{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application's resources outside of Lambdas and Api Gateway",
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "IamPolicyLambda": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "${stage}-${project}-lambda",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:${region}:*:*"
            },
            "$${logsStatementTemplate}",
            "$${lambdaStatementTemplate}",
            "$${sqsStatementTemplate}",
            "$${sesStatementTemplate}",
            "$${kinesisStatementTemplate}",
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "RecipientsImportS3Bucket"
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "ListExportS3Bucket"
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": "dynamodb:*",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:${region}:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/*"
                  ]
                ]
              }
            },
            {
              "Effect": "Allow",
              "Action": "dynamodb:*",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:dynamodb:${region}:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":table/*/index/*"
                  ]
                ]
              }
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRoleLambda"
          }
        ]
      }
    },
    "EmailAdminsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${emailAdminsTopic}"
      }
    },
    "SendEmailsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${sendEmailsTopic}"
      }
    },
    "SendCampaignTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${sendCampaignTopic}"
      }
    },
    "AttachSenderTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${attachSenderTopic}"
      }
    },
    "EmailNotificationsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${emailNotificationsTopic}"
      }
    },
    "EmailNotificationsTopicPolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
            "Version": "2008-10-17",
            "Statement": [
              {
                "Sid": "__default_statement_ID",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*"
                },
                "Action": [
                  "SNS:Publish",
                  "SNS:RemovePermission",
                  "SNS:SetTopicAttributes",
                  "SNS:DeleteTopic",
                  "SNS:ListSubscriptionsByTopic",
                  "SNS:GetTopicAttributes",
                  "SNS:Receive",
                  "SNS:AddPermission",
                  "SNS:Subscribe"
                ],
                "Resource": {"Ref": "EmailNotificationsTopic"},
                "Condition": {
                  "StringEquals": {
                    "AWS:SourceOwner": {"Ref": "AWS::AccountId"}
                  }
                }
              },
              {
                "Sid": "__console_pub_1",
                "Effect": "Allow",
                "Principal": {
                  "AWS": "*"
                },
                "Action": "SNS:Publish",
                "Resource": {"Ref": "EmailNotificationsTopic"}
              }
            ]
        },
        "Topics": [{"Ref": "EmailNotificationsTopic"}]
      }
    },
    "PrecompileCampaignTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${precompileCampaignTopic}"
      }
    },
    "UpdateCampaignTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${updateCampaignTopic}"
      }
    },
    "PrecompileEmailTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${precompileEmailTopic}"
      }
    },
    "AttachRecipientsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${attachRecipientsTopic}"
      }
    },
    "AttachListRecipientsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${attachListRecipientsTopic}"
      }
    },
    "AttachRecipientsCountTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${attachRecipientsCountTopic}"
      }
    },
    "SentEmailsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${sentEmailsTopic}"
      }
    },
    "UnsubscribedRecipientTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${unsubscribedRecipientTopic}"
      }
    },
    "UpdateListImportStatusTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "$${updateListImportStatusTopic}"
      }
    },
    "FreeUsersSendEmailQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "${project}-${stage}-FreeUsersSendEmail"
      }
    },
    "FreeUsersQueuePopulatedAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Alarm if free users queue is not empty",
        "Namespace": "AWS/SQS",
        "MetricName": "ApproximateNumberOfMessagesVisible",
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "FreeUsersSendEmailQueue",
                "QueueName"
              ]
            }
          }
        ],
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [
          {
            "Ref": "SendEmailsTopic"
          }
        ]
      }
    },
    "LinksTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${defaultRCU}",
          "WriteCapacityUnits": "${defaultWCU}"
        },
        "TableName": "$${linksTable}"
      }
    },
    "SentEmailsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "messageId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "messageId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${sentEmailsRCU}",
          "WriteCapacityUnits": "${sentEmailsWCU}"
        },
        "TableName": "$${sentEmailsTable}",
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        }
      }
    },
    "ReportsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "campaignId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "campaignId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${defaultRCU}",
          "WriteCapacityUnits": "${defaultWCU}"
        },
        "TableName": "$${reportsTable}"
      }
    },
    "CampaignsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "sentAt",
            "AttributeType": "N"
          },
          {
            "AttributeName": "scheduledAt",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName" : "$${campaignsScheduledAtIndex}",
            "KeySchema" : [{
              "AttributeName": "scheduledAt",
              "KeyType": "HASH"
            }],
            "Projection" : {
              "NonKeyAttributes" : ["sentAt", "status"],
              "ProjectionType": "INCLUDE"
            },
            "ProvisionedThroughput" : {
              "ReadCapacityUnits": "${scheduledAtIndexRCU}",
              "WriteCapacityUnits": "${scheduledAtIndexWCU}"
            }
          }
        ],
        "LocalSecondaryIndexes": [
          {
            "IndexName": "$${campaignsSentAtIndex}",
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "sentAt",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${defaultRCU}",
          "WriteCapacityUnits": "${defaultWCU}"
        },
        "TableName": "$${campaignsTable}"
      }
    },
    "UsersTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${defaultRCU}",
          "WriteCapacityUnits": "${defaultWCU}"
        },
        "TableName": "$${usersTable}"
      }
    },
    "TemplatesTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${defaultRCU}",
          "WriteCapacityUnits": "${defaultWCU}"
        },
        "TableName": "$${templatesTable}"
      }
    },
    "OpensStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 1
      }
    },
    "ClicksStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": 1
      }
    },
    "RecipientsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "listId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "listId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${recipientsRCU}",
          "WriteCapacityUnits": "${recipientsWCU}"
        },
        "TableName": "$${recipientsTable}"
      }
    },
    "OpensTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "campaignId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "recipientId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "recipientId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "campaignId",
            "KeyType": "RANGE"
          }
        ],
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${opensRCU}",
          "WriteCapacityUnits": "${opensWCU}"
        },
        "TableName": "$${opensTable}"
      }
    },
    "ClicksTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "linkId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "recipientId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "recipientId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "linkId",
            "KeyType": "RANGE"
          }
        ],
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${clicksRCU}",
          "WriteCapacityUnits": "${clicksWCU}"
        },
        "TableName": "$${clicksTable}"
      }
    },
    "OpensReportTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "campaignId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "timestamp",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "campaignId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "timestamp",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${opensReportRCU}",
          "WriteCapacityUnits": "${opensReportWCU}"
        },
        "TableName": "$${opensReportTable}"
      }
    },
    "ClicksReportTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "campaignId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "timestamp",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "campaignId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "timestamp",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${clicksReportRCU}",
          "WriteCapacityUnits": "${clicksReportWCU}"
        },
        "TableName": "$${clicksReportTable}"
      }
    },
    "ListsTable": {
      "Type": "AWS::DynamoDB::Table",
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "userId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "userId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "id",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": "${defaultRCU}",
          "WriteCapacityUnits": "${defaultWCU}"
        },
        "TableName": "$${listsTable}"
      }
    },
    "RecipientsImportS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicReadWrite",
        "BucketName": "$${recipientsImportBucket}",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": ["*"],
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST",
                "HEAD"
              ],
              "AllowedOrigins": ["*"],
              "ExposedHeaders": [
                "x-amz-server-side-encryption",
                "x-amz-request-id",
                "x-amz-id-2"
              ]
            }
          ]
        }
      }
    },
    "ListExportS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "$${listsExportBucket}"
      }
    },
    "StaticDataBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicReadWrite",
        "BucketName": "$${staticDataBucket}",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [],
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST",
                "HEAD"
              ],
              "AllowedOrigins": ["*"]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "IamRoleArnLambda": {
      "Description": "ARN of the lambda IAM role",
      "Value": {
        "Fn::GetAtt": [
          "IamRoleLambda",
          "Arn"
        ]
      }
    },
    "QueueURL": {
      "Description": "URL of newly created SQS Queue",
      "Value": {
        "Ref": "FreeUsersSendEmailQueue"
      }
    },
    "QueueARN": {
      "Description": "ARN of newly created SQS Queue",
      "Value": {
        "Fn::GetAtt": [
          "FreeUsersSendEmailQueue",
          "Arn"
        ]
      }
    },
    "QueueName": {
      "Description": "Name newly created SQS Queue",
      "Value": {
        "Fn::GetAtt": [
          "FreeUsersSendEmailQueue",
          "QueueName"
        ]
      }
    },
    "EmailAdminsTopicARN": {
      "Description": "ARN of the EmailAdmins SNS topic",
      "Value": {
        "Ref": "EmailAdminsTopic"
      }
    },
    "PrecompileCampaignTopicARN": {
      "Description": "ARN of the PrecompileCampaign SNS topic",
      "Value": {
        "Ref": "PrecompileCampaignTopic"
      }
    },
    "UnsubscribedRecipientTopicARN": {
      "Description": "ARN of the UnsubscribedRecipientTopic SNS topic",
      "Value": {
        "Ref": "UnsubscribedRecipientTopic"
      }
    },
    "UpdateCampaignTopicARN": {
      "Description": "ARN of the UpdateCampaign SNS topic",
      "Value": {
        "Ref": "UpdateCampaignTopic"
      }
    },
    "SendCampaignTopicARN": {
      "Description": "ARN of the SendCampaign SNS topic",
      "Value": {
        "Ref": "SendCampaignTopic"
      }
    },
    "SendEmailsTopicARN": {
      "Description": "ARN of the SendEmails SNS topic",
      "Value": {
        "Ref": "SendEmailsTopic"
      }
    },
    "EmailNotificationsTopicARN": {
      "Description": "ARN of the EmailNotifications SNS topic",
      "Value": {
        "Ref": "EmailNotificationsTopic"
      }
    },
    "SentEmailsTopicARN": {
      "Description": "ARN of the SentEmails SNS topic",
      "Value": {
        "Ref": "SentEmailsTopic"
      }
    },
    "AttachRecipientsTopicARN": {
      "Description": "ARN of the AttachRecipients SNS topic",
      "Value": {
        "Ref": "AttachRecipientsTopic"
      }
    },
    "AttachListRecipientsTopicARN": {
      "Description": "ARN of the AttachListRecipients SNS topic",
      "Value": {
        "Ref": "AttachListRecipientsTopic"
      }
    },
    "AttachSenderTopicARN": {
      "Description": "ARN of the AttachSender SNS topic",
      "Value": {
        "Ref": "AttachSenderTopic"
      }
    },
    "AttachRecipientsCountTopicARN": {
      "Description": "ARN of the AttachRecipientsCount SNS topic",
      "Value": {
        "Ref": "AttachRecipientsCountTopic"
      }
    },
    "UpdateListImportStatusTopicARN": {
      "Description": "ARN of the UpdateListImportStatus SNS topic",
      "Value": {
        "Ref": "UpdateListImportStatusTopic"
      }
    },
    "OpensStreamName": {
      "Description": "Name of the Opens Kinesis Stream",
      "Value": {
        "Ref": "OpensStream"
      }
    },
    "OpensStreamARN": {
      "Description": "Name of the Opens Kinesis Stream",
      "Value": {
        "Fn::GetAtt": [
          "OpensStream",
          "Arn"
        ]
      }
    },
    "ClicksStreamName": {
      "Description": "Name of the Clicks Kinesis Stream",
      "Value": {
        "Ref": "ClicksStream"
      }
    },
    "ClicksStreamARN": {
      "Description": "Name of the Clicks Kinesis Stream",
      "Value": {
        "Fn::GetAtt": [
          "ClicksStream",
          "Arn"
        ]
      }
    },
    "PrecompileEmailTopicARN": {
      "Description": "ARN of the PrecompileEmailTopic SNS topic",
      "Value": {
        "Ref": "PrecompileEmailTopic"
      }
    },
    "RecipientsImportS3BucketName": {
      "Description": "ARN of the RecipientsImportS3Bucket",
      "Value": {
        "Ref": "RecipientsImportS3Bucket"
      }
    },
    "RecipientsTableStreamARN": {
      "Description": "Arn of the Recipients DynamoDB Table Stream",
      "Value": {
        "Fn::GetAtt": [
          "RecipientsTable",
          "StreamArn"
        ]
      }
    },
    "SentEmailsTableStreamARN": {
      "Description": "Arn of the SentEmails DynamoDB Table Stream",
      "Value": {
        "Fn::GetAtt": [
          "SentEmailsTable",
          "StreamArn"
        ]
      }
    },
    "ClicksTableStreamARN": {
      "Description": "Arn of the ClicksTable DynamoDB Table Stream",
      "Value": {
        "Fn::GetAtt": [
          "ClicksTable",
          "StreamArn"
        ]
      }
    },
    "OpensTableStreamARN": {
      "Description": "Arn of the OpensTable DynamoDB Table Stream",
      "Value": {
        "Fn::GetAtt": [
          "OpensTable",
          "StreamArn"
        ]
      }
    }
  }
}
